name: Build and Deploy .NET App to Azure Container App

on:
  push:
    branches:
      - main

# Required for OIDC authentication
permissions:
  id-token: write
  contents: read

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      ACR_NAME: todocsharp
      IMAGE_NAME: todolistapi
      RESOURCE_GROUP: todo-csharp-project
      CONTAINER_APP_NAME: todo-csharp-app
      CONTAINER_ENV_NAME: todo-csharp-env
      LOCATION: eastus

    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683     #v4.2.2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2   #v3.10.0

      - name: Azure Login via OIDC
        uses: azure/login@a457da9ea143d694b1b9c7c869ebb04ebe844ef51           #v2.3.0
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Log in to ACR
        run: az acr login --name $ACR_NAME

      - name: Build Docker image and push to ACR
        env:
          IMAGE_NAME: ${{ env.IMAGE_NAME }}
          ACR_NAME: ${{ env.ACR_NAME }}
        run: |
          TAG="$ACR_NAME.azurecr.io/$IMAGE_NAME:${{ github.sha }}"
          echo "Building Docker image: $IMAGE_NAME with tag: $TAG"
          docker buildx build --platform linux/amd64,linux/arm64 --push -t $TAG -f TodoListAPI/Dockerfile .

      - name: Create Container App if it doesn't exist and deploy
        env:
          IMAGE_NAME: ${{ env.IMAGE_NAME }}
          ACR_NAME: ${{ env.ACR_NAME }}
        run: |
          ACR_LOGIN_SERVER=${ACR_NAME}.azurecr.io

          # Ensure Container App Environment exists
          if ! az containerapp env show --name $CONTAINER_ENV_NAME --resource-group $RESOURCE_GROUP &>/dev/null; then
            echo "Creating Container App Environment: $CONTAINER_ENV_NAME"
            az containerapp env create \
              --name $CONTAINER_ENV_NAME \
              --resource-group $RESOURCE_GROUP \
              --location $LOCATION
          else
            echo "Container App Environment already exists."
          fi

          # Check if container app exists
          if ! az containerapp show --name $CONTAINER_APP_NAME --resource-group $RESOURCE_GROUP &>/dev/null; then
            echo "Creating Container App: $CONTAINER_APP_NAME"
            az containerapp create \
              --name $CONTAINER_APP_NAME \
              --resource-group $RESOURCE_GROUP \
              --environment $CONTAINER_ENV_NAME \
              --image $ACR_NAME.azurecr.io/$IMAGE_NAME:${{ github.sha }} \
              --registry-server $ACR_LOGIN_SERVER \
              --target-port 5267 \
              --ingress external \
              --query properties.configuration.ingress.fqdn \
              --cpu 0.5 --memory 1.0Gi
          else
            echo "Updating existing Container App: $CONTAINER_APP_NAME"
            az containerapp update \
              --name $CONTAINER_APP_NAME \
              --resource-group $RESOURCE_GROUP \
              --image $ACR_LOGIN_SERVER/$IMAGE_NAME:latest
          fi
